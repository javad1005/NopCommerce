@using Nop.Core
@using Nop.Services.Localization

@inject ILocalizationService localizationService
@inject IWorkContext workContext

@{
    var taxTypeSelectorHtml = await Component.InvokeAsync("TaxTypeSelector");
    var currencySelectorHtml = await Component.InvokeAsync("CurrencySelector");
    var languageSelectorHtml = await Component.InvokeAsync("LanguageSelector");
    var headerSelectorWidgetHtml = await Component.InvokeAsync("Widget", new { widgetZone = "header_selectors" });

    var languageId = (await workContext.GetWorkingLanguageAsync()).Id;
    var resource = await localizationService.GetResourceAsync("SevenSpikes.Themes.Pioneer.HeaderPromoText", languageId, false, string.Empty, true);
}

<div class="header">
    @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.HeaderBefore })
    <div class="header-upper">
        <div class="admin-links-wrapper">
            @await Component.InvokeAsync(typeof(AdminHeaderLinksViewComponent))
            @if (!string.IsNullOrEmpty(resource))
            {
                <div class="promo-text">
                    <span>@T("SevenSpikes.Themes.Pioneer.HeaderPromoText")</span>
                </div>
            }
        </div>
        <div class="header-links-wrapper flyout-nav">
            <div class="nav-close close-links">
                <span>@T("SevenSpikes.Themes.Common.CloseMenu")</span>
            </div>
            <div class="nav-panel">
                @if (!String.IsNullOrEmpty(await taxTypeSelectorHtml.RenderHtmlContentAsync()) ||
                !String.IsNullOrEmpty(await currencySelectorHtml.RenderHtmlContentAsync()) ||
                !String.IsNullOrEmpty(await languageSelectorHtml.RenderHtmlContentAsync()) ||
                !String.IsNullOrEmpty(await headerSelectorWidgetHtml.RenderHtmlContentAsync()))
                {
                    <div class="header-selects">
                        @await Component.InvokeAsync(typeof(TaxTypeSelectorViewComponent))
                        @await Component.InvokeAsync(typeof(CurrencySelectorViewComponent))
                        @await Component.InvokeAsync(typeof(LanguageSelectorViewComponent))
                        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.HeaderSelectors })
                    </div>
                }
                @await Component.InvokeAsync(typeof(HeaderLinksViewComponent))
            </div>
        </div>
    </div>
    <div class="header-lower">
        <div class="header-logo">
            @await Component.InvokeAsync(typeof(LogoViewComponent))
        </div>
        <div class="search-box store-search-box flyout-nav">
            <div class="nav-close close-search">
                <span>@T("SevenSpikes.Themes.Common.CloseMenu")</span>
            </div>
            <div class="nav-panel">
                @await Component.InvokeAsync(typeof(SearchBoxViewComponent))
            </div>
        </div>
        @await Component.InvokeAsync(typeof(FlyoutShoppingCartViewComponent))
    </div>
    @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.HeaderAfter })
</div>